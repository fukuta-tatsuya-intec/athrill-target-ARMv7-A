machine:
  byteorder: little
  extras:
    arch_type: arm
    pseudo_codes:
      - name: arm_add_imm
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rd: PseudoCodeRegisterDataType
          Rn: PseudoCodeRegisterDataType
          imm32: PseudoCodeImmediateData32Type
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType

      - name: arm_add_reg
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rd: PseudoCodeRegisterDataType
          Rn: PseudoCodeRegisterDataType
          Rm: PseudoCodeRegisterDataType
          shift_t: PseudoCodeSRType
          shift_n: PseudoCodeShiftNType
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType


      - name: arm_sub_imm
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rd: PseudoCodeRegisterDataType
          Rn: PseudoCodeRegisterDataType
          imm32: PseudoCodeImmediateData32Type
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType

      - name: arm_sub_reg
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rd: PseudoCodeRegisterDataType
          Rn: PseudoCodeRegisterDataType
          Rm: PseudoCodeRegisterDataType
          shift_t: PseudoCodeSRType
          shift_n: PseudoCodeShiftNType
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType


      - name: arm_cmp_imm
        inputs:
          cond: PseudoCodeConditionDataType
          sign: PseudoCodeSignType
          Rn: PseudoCodeRegisterDataType
          imm32: PseudoCodeImmediateData32Type
        outputs:
          result: PseudoCodeCmpResultType
          status_flag: PseudoCodeStatusFlagType

      - name: arm_cmp_reg
        inputs:
          cond: PseudoCodeConditionDataType
          Rn: PseudoCodeRegisterDataType
          Rm: PseudoCodeRegisterDataType
          shift_t: PseudoCodeSRType
          shift_n: PseudoCodeShiftNType
        outputs:
          result: PseudoCodeCmpResultType
          status_flag: PseudoCodeStatusFlagType

      - name: arm_adr_imm
        inputs:
          cond: PseudoCodeConditionDataType
          Rd: PseudoCodeRegisterDataType
          imm32: PseudoCodeImmediateData32Type
          add: PseudoCodeBitCountType
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType

      - name: arm_add_spimm
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rd: PseudoCodeRegisterDataType
          SP: PseudoCodeRegisterDataType
          imm32: PseudoCodeImmediateData32Type
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType

      - name: arm_subs_pclr
        inputs:
          cond: PseudoCodeConditionDataType
          opcode: PseudoCodeOpcodeType
          Rn: PseudoCodeRegisterDataType
          Rm: PseudoCodeRegisterDataType
          register_form: PseudoCodeRegisterFormType
          shift_t: PseudoCodeSRType
          shift_n: PseudoCodeShiftNType
          imm32: PseudoCodeImmediateData32Type
        outputs:
          PC: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType

      - name: arm_mov_imm
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rd: PseudoCodeRegisterDataType
          imm32: PseudoCodeImmediateData32Type
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType

      - name: arm_mvn_imm
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rd: PseudoCodeRegisterDataType
          imm32: PseudoCodeImmediateData32Type
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType


      - name: arm_mov_reg
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rd: PseudoCodeRegisterDataType
          Rm: PseudoCodeRegisterDataType
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType

      - name: arm_mvn_reg
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rd: PseudoCodeRegisterDataType
          Rm: PseudoCodeRegisterDataType
          shift_t: PseudoCodeSRType
          shift_n: PseudoCodeShiftNType
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType



      - name: arm_bl_imm
        inputs:
          cond: PseudoCodeConditionDataType
          imm32: PseudoCodeImmediateData32Type
          type: PseudoCodeInstrSetType
        outputs:
          LR: PseudoCodeRegisterDataType

      - name: arm_b_imm
        inputs:
          cond: PseudoCodeConditionDataType
          imm32: PseudoCodeImmediateData32Type
          PC: PseudoCodeRegisterDataType

      - name: arm_bx_reg
        inputs:
          cond: PseudoCodeConditionDataType
          Rm: PseudoCodeRegisterDataType

      - name: arm_bl_reg
        inputs:
          cond: PseudoCodeConditionDataType
          Rm: PseudoCodeRegisterDataType
        outputs:
          LR: PseudoCodeRegisterDataType


      - name: arm_ldr_imm
        inputs:
          size: PseudoCodeSizeType
          cond: PseudoCodeConditionDataType
          imm32: PseudoCodeImmediateData32Type
          add: PseudoCodeBoolAddType
          index: PseudoCodeBoolIndexType
          wback: PseudoCodeBoolWbackType
          Rn: PseudoCodeRegisterDataType
          Rt: PseudoCodeRegisterDataType
        outputs:
          Rt: PseudoCodeRegisterDataType

      - name: arm_ldr_literal
        inputs:
          cond: PseudoCodeConditionDataType
          imm32: PseudoCodeImmediateData32Type
          add: PseudoCodeBoolAddType
          PC: PseudoCodeRegisterDataType
          Rt: PseudoCodeRegisterDataType
        outputs:
          Rt: PseudoCodeRegisterDataType


      - name: arm_ldrd_imm
        inputs:
          cond: PseudoCodeConditionDataType
          imm32: PseudoCodeImmediateData32Type
          add: PseudoCodeBoolAddType
          index: PseudoCodeBoolIndexType
          wback: PseudoCodeBoolWbackType
          Rn: PseudoCodeRegisterDataType
          Rt1: PseudoCodeRegisterDataType
          Rt2: PseudoCodeRegisterDataType
        outputs:
          Rn: PseudoCodeRegisterDataType


      - name: arm_ldr_reg
        inputs:
          size: PseudoCodeSizeType
          sign: PseudoCodeSignType
          cond: PseudoCodeConditionDataType
          add: PseudoCodeBoolAddType
          index: PseudoCodeBoolIndexType
          wback: PseudoCodeBoolWbackType
          shift_t: PseudoCodeSRType
          shift_n: PseudoCodeShiftNType
          Rn: PseudoCodeRegisterDataType
          Rt: PseudoCodeRegisterDataType
          Rm: PseudoCodeRegisterDataType
        outputs:
          Rt: PseudoCodeRegisterDataType


      - name: arm_push
        inputs:
          cond: PseudoCodeConditionDataType
          bitcount: PseudoCodeBitCountType
          UnalignedAllowed: PseudoCodeUnalignedAllowedType
          registers: PseudoCodeRegisterListType
          SP: PseudoCodeRegisterDataType
        outputs:
          SP: PseudoCodeRegisterDataType


      - name: arm_stmfd
        inputs:
          cond: PseudoCodeConditionDataType
          bitcount: PseudoCodeBitCountType
          wback: PseudoCodeBoolWbackType
          registers: PseudoCodeRegisterListType
          Rn: PseudoCodeRegisterDataType
        outputs:
          Rn: PseudoCodeRegisterDataType

      - name: arm_stm
        inputs:
          cond: PseudoCodeConditionDataType
          wback: PseudoCodeBoolWbackType
          bitcount: PseudoCodeBitCountType
          Rn: PseudoCodeRegisterDataType
          registers: PseudoCodeRegisterListType
        outputs:
          Rn: PseudoCodeRegisterDataType


      - name: arm_pop
        inputs:
          cond: PseudoCodeConditionDataType
          bitcount: PseudoCodeBitCountType
          UnalignedAllowed: PseudoCodeUnalignedAllowedType
          registers: PseudoCodeRegisterListType
          SP: PseudoCodeRegisterDataType
        outputs:
          SP: PseudoCodeRegisterDataType

      - name: arm_ldm
        inputs:
          cond: PseudoCodeConditionDataType
          wback: PseudoCodeBoolWbackType
          bitcount: PseudoCodeBitCountType
          Rn: PseudoCodeRegisterDataType
          registers: PseudoCodeRegisterListType
        outputs:
          Rn: PseudoCodeRegisterDataType



      - name: arm_str_imm
        inputs:
          size: PseudoCodeSizeType
          cond: PseudoCodeConditionDataType
          imm32: PseudoCodeImmediateData32Type
          add: PseudoCodeBoolAddType
          index: PseudoCodeBoolIndexType
          wback: PseudoCodeBoolWbackType
          Rn: PseudoCodeRegisterDataType
          Rt: PseudoCodeRegisterDataType
        outputs:
          Rn: PseudoCodeRegisterDataType

      - name: arm_strd_imm
        inputs:
          cond: PseudoCodeConditionDataType
          imm32: PseudoCodeImmediateData32Type
          add: PseudoCodeBoolAddType
          index: PseudoCodeBoolIndexType
          wback: PseudoCodeBoolWbackType
          Rn: PseudoCodeRegisterDataType
          Rt1: PseudoCodeRegisterDataType
          Rt2: PseudoCodeRegisterDataType
        outputs:
          Rn: PseudoCodeRegisterDataType



      - name: arm_str_reg
        inputs:
          size: PseudoCodeSizeType
          sign: PseudoCodeSignType
          cond: PseudoCodeConditionDataType
          add: PseudoCodeBoolAddType
          index: PseudoCodeBoolIndexType
          wback: PseudoCodeBoolWbackType
          shift_t: PseudoCodeSRType
          shift_n: PseudoCodeShiftNType
          Rn: PseudoCodeRegisterDataType
          Rt: PseudoCodeRegisterDataType
          Rm: PseudoCodeRegisterDataType
          
      - name: arm_nop
        inputs:
          cond: PseudoCodeConditionDataType

      - name: arm_msr_imm
        inputs:
          cond: PseudoCodeConditionDataType
          imm32: PseudoCodeImmediateData32Type
          write_nzcvq: PseudoCodeWriteNZCVQType
          write_g: PseudoCodeWriteGType
 
      - name: arm_msr2_imm
        inputs:
          cond: PseudoCodeConditionDataType
          imm32: PseudoCodeImmediateData32Type
          mask: PseudoCodeMaskType
          write_spsr: PseudoCodeWriteSpsrType

      - name: arm_msr2_reg
        inputs:
          cond: PseudoCodeConditionDataType
          Rn: PseudoCodeRegisterDataType
          mask: PseudoCodeMaskType
          write_spsr: PseudoCodeWriteSpsrType

      - name: arm_mrs
        inputs:
          cond: PseudoCodeConditionDataType
          Rd: PseudoCodeRegisterDataType
        outputs:
          Rd: PseudoCodeRegisterDataType

      - name: arm_mcr
        inputs:
          cond: PseudoCodeConditionDataType
          cp: PseudoCodeCoprocType
          CRn: PseudoCodeCoprocCRnType
          op1: PseudoCodeCoprocOp1Type
          CRm: PseudoCodeCoprocCRmType
          op2: PseudoCodeCoprocOp2Type
          Rt: PseudoCodeRegisterDataType

      - name: arm_mrc
        inputs:
          cond: PseudoCodeConditionDataType
          cp: PseudoCodeCoprocType
          CRn: PseudoCodeCoprocCRnType
          op1: PseudoCodeCoprocOp1Type
          CRm: PseudoCodeCoprocCRmType
          op2: PseudoCodeCoprocOp2Type
          Rt: PseudoCodeRegisterDataType

      - name: arm_bic_imm
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rd: PseudoCodeRegisterDataType
          Rn: PseudoCodeRegisterDataType
          imm32: PseudoCodeImmediateData32Type
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType

      - name: arm_orr_imm
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rd: PseudoCodeRegisterDataType
          Rn: PseudoCodeRegisterDataType
          imm32: PseudoCodeImmediateData32Type
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType

      - name: arm_orr_reg
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rd: PseudoCodeRegisterDataType
          Rn: PseudoCodeRegisterDataType
          Rm: PseudoCodeRegisterDataType
          shift_t: PseudoCodeSRType
          shift_n: PseudoCodeShiftNType
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType

      - name: arm_movt
        inputs:
          cond: PseudoCodeConditionDataType
          Rd: PseudoCodeRegisterDataType
          imm16: PseudoCodeImmediateData16Type
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType

      - name: arm_lsl_imm
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rd: PseudoCodeRegisterDataType
          shift_t: PseudoCodeSRType
          shift_n: PseudoCodeShiftNType
          Rm: PseudoCodeRegisterDataType
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType

      - name: arm_lsl_reg
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rd: PseudoCodeRegisterDataType
          Rm: PseudoCodeRegisterDataType
          Rn: PseudoCodeRegisterDataType
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType


      - name: arm_lsr_imm
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rd: PseudoCodeRegisterDataType
          shift_t: PseudoCodeSRType
          shift_n: PseudoCodeShiftNType
          Rm: PseudoCodeRegisterDataType
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType


      - name: arm_bfc
        inputs:
          cond: PseudoCodeConditionDataType
          msbit: PseudoCodeMsbitType
          lsbit: PseudoCodeLsbitType
          Rd: PseudoCodeRegisterDataType
        outputs:
          Rd: PseudoCodeRegisterDataType

      - name: arm_and_imm
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rd: PseudoCodeRegisterDataType
          Rn: PseudoCodeRegisterDataType
          imm32: PseudoCodeImmediateData32Type
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType

      - name: arm_and_reg
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rd: PseudoCodeRegisterDataType
          Rn: PseudoCodeRegisterDataType
          Rm: PseudoCodeRegisterDataType
          shift_t: PseudoCodeSRType
          shift_n: PseudoCodeShiftNType
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType


      - name: arm_uxt
        inputs:
          cond: PseudoCodeConditionDataType
          size: PseudoCodeSizeType
          Rd: PseudoCodeRegisterDataType
          rotate: PseudoCodeRotationType
          Rm: PseudoCodeRegisterDataType
        outputs:
          Rd: PseudoCodeRegisterDataType

      - name: arm_rsb_reg
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rn: PseudoCodeRegisterDataType
          Rd: PseudoCodeRegisterDataType
          shift_t: PseudoCodeSRType
          shift_n: PseudoCodeShiftNType
          Rm: PseudoCodeRegisterDataType
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType

      - name: arm_rsb_imm
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rn: PseudoCodeRegisterDataType
          Rd: PseudoCodeRegisterDataType
          imm32: PseudoCodeImmediateData32Type
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType



      - name: arm_sbc_reg
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rn: PseudoCodeRegisterDataType
          Rd: PseudoCodeRegisterDataType
          shift_t: PseudoCodeSRType
          shift_n: PseudoCodeShiftNType
          Rm: PseudoCodeRegisterDataType
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType


      - name: arm_mul
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rn: PseudoCodeRegisterDataType
          Rd: PseudoCodeRegisterDataType
          Rm: PseudoCodeRegisterDataType
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType

      - name: arm_tst_imm
        inputs:
          cond: PseudoCodeConditionDataType
          Rn: PseudoCodeRegisterDataType
          imm32: PseudoCodeImmediateData32Type
        outputs:
          status_flag: PseudoCodeStatusFlagType

      - name: arm_tst_reg
        inputs:
          cond: PseudoCodeConditionDataType
          Rn: PseudoCodeRegisterDataType
          shift_t: PseudoCodeSRType
          shift_n: PseudoCodeShiftNType
          Rm: PseudoCodeRegisterDataType
        outputs:
          status_flag: PseudoCodeStatusFlagType

      - name: arm_sxtb
        inputs:
          cond: PseudoCodeConditionDataType
          Rd: PseudoCodeRegisterDataType
          rotate: PseudoCodeRotationType
          Rm: PseudoCodeRegisterDataType
        outputs:
          Rd: PseudoCodeRegisterDataType

      - name: arm_asr_imm
        inputs:
          cond: PseudoCodeConditionDataType
          S: PseudoCodeUpdateStatusFlagType
          Rd: PseudoCodeRegisterDataType
          shift_t: PseudoCodeSRType
          shift_n: PseudoCodeShiftNType
          Rm: PseudoCodeRegisterDataType
        outputs:
          Rd: PseudoCodeRegisterDataType
          status_flag: PseudoCodeStatusFlagType

      - name: arm_srs
        inputs:
          mode: PseudoCodeModeType
          wback: PseudoCodeBoolWbackType
          increment: PseudoCodeBoolIncrementType
          wordhigher: PseudoCodeBoolWordHigherType
          SP: PseudoCodeRegisterDataType
          LR: PseudoCodeRegisterDataType
          SPSR: PseudoCodeSPSRType
        outputs:
          SP: PseudoCodeRegisterDataType

      - name: arm_rfe
        inputs:
          wback: PseudoCodeBoolWbackType
          increment: PseudoCodeBoolIncrementType
          wordhigher: PseudoCodeBoolWordHigherType
          Rn: PseudoCodeRegisterDataType
        outputs:
          Rn: PseudoCodeRegisterDataType


      - name: arm_wfi
        inputs:
          cond: PseudoCodeConditionDataType


      - name: arm_vadd_freg
        inputs:
          cond: PseudoCodeConditionDataType
          Vn: PseudoCodeFloatRegisterDataType
          Vd: PseudoCodeFloatRegisterDataType
          Vm: PseudoCodeFloatRegisterDataType
          advsimd: PseudoCodeBoolWbackType
          dp_operation: PseudoCodeBoolIncrementType
        outputs:
          Vd: PseudoCodeFloatRegisterDataType

      - name: arm_vsub_freg
        inputs:
          cond: PseudoCodeConditionDataType
          Vn: PseudoCodeFloatRegisterDataType
          Vd: PseudoCodeFloatRegisterDataType
          Vm: PseudoCodeFloatRegisterDataType
          advsimd: PseudoCodeBoolWbackType
          dp_operation: PseudoCodeBoolIncrementType
        outputs:
          Vd: PseudoCodeFloatRegisterDataType

      - name: arm_vmul_freg
        inputs:
          cond: PseudoCodeConditionDataType
          Vn: PseudoCodeFloatRegisterDataType
          Vd: PseudoCodeFloatRegisterDataType
          Vm: PseudoCodeFloatRegisterDataType
          advsimd: PseudoCodeBoolWbackType
          dp_operation: PseudoCodeBoolIncrementType
        outputs:
          Vd: PseudoCodeFloatRegisterDataType

      - name: arm_vdiv_freg
        inputs:
          cond: PseudoCodeConditionDataType
          Vn: PseudoCodeFloatRegisterDataType
          Vd: PseudoCodeFloatRegisterDataType
          Vm: PseudoCodeFloatRegisterDataType
          advsimd: PseudoCodeBoolWbackType
          dp_operation: PseudoCodeBoolIncrementType
        outputs:
          Vd: PseudoCodeFloatRegisterDataType


      - name: arm_vldr
        inputs:
          cond: PseudoCodeConditionDataType
          Rn: PseudoCodeRegisterDataType
          Vd: PseudoCodeFloatRegisterDataType
          add: PseudoCodeBoolAddType
          imm32: PseudoCodeImmediateData32Type
        outputs:
          Vd: PseudoCodeFloatRegisterDataType


      - name: arm_vcvt_df
        inputs:
          cond: PseudoCodeConditionDataType
          double_to_single: PseudoCodeDoubleToSingleType
          Vd: PseudoCodeFloatRegisterDataType
          Vm: PseudoCodeFloatRegisterDataType
        outputs:
          Vd: PseudoCodeFloatRegisterDataType

      - name: arm_vcvt_fi
        inputs:
          cond: PseudoCodeConditionDataType
          dp_operation: PseudoCodeBoolIncrementType
          to_integer: PseudoCodeToIntegerType
          unsigned_cvt: PseudoCodeUnsignedCvtType
          round_zero: PseudoCodeRoundZeroType
          round_nearest: PseudoCodeRoundNearestType
          Vd: PseudoCodeFloatRegisterDataType
          Vm: PseudoCodeFloatRegisterDataType
        outputs:
          Vd: PseudoCodeFloatRegisterDataType



      - name: arm_vstr
        inputs:
          cond: PseudoCodeConditionDataType
          single_reg: PseudoCodeSingleRegType
          add: PseudoCodeBoolAddType
          imm32: PseudoCodeImmediateData32Type
          Rn: PseudoCodeRegisterDataType
          Vd: PseudoCodeFloatRegisterDataType
        outputs:
          Vd: PseudoCodeFloatRegisterDataType

      - name: arm_vcmp
        inputs:
          cond: PseudoCodeConditionDataType
          dp_operation: PseudoCodeBoolIncrementType
          quiet_nan_exc: PseudoCodeQuietNanExcType
          with_zero: PseudoCodeWithZeroType
          Vd: PseudoCodeFloatRegisterDataType
          Vm: PseudoCodeFloatRegisterDataType
        outputs:
          status_flag: PseudoCodeFloatStatusFlagType

      - name: arm_vmrs
        inputs:
          cond: PseudoCodeConditionDataType
          Rt: PseudoCodeRegisterDataType
        outputs:
          status_flag: PseudoCodeFloatStatusFlagType

      - name: arm_vmov_imm
        inputs:
          cond: PseudoCodeConditionDataType
          imm32: PseudoCodeImmediateData32Type
          imm64: PseudoCodeImmediateData64Type
          advsimd: PseudoCodeBoolWbackType
          single_reg: PseudoCodeSingleRegType
          Vd1: PseudoCodeFloatRegisterDataType
          Vd2: PseudoCodeFloatRegisterDataType
          regs: PseudoCodeRegNumType
        outputs:
          Vd1: PseudoCodeFloatRegisterDataType
          Vd2: PseudoCodeFloatRegisterDataType
          status_flag: PseudoCodeFloatStatusFlagType


      - name: arm_vmov_sreg
        inputs:
          cond: PseudoCodeConditionDataType
          to_arm_register: PseudoCodeToArmRegisterType
          Vn: PseudoCodeFloatRegisterDataType
          Rt: PseudoCodeRegisterDataType
        outputs:
          Vn: PseudoCodeFloatRegisterDataType
          Rt: PseudoCodeRegisterDataType


decoder:
  namespace: arm

instructions:
  - name: arm_add_imm_a1
    format: xxxx:cond|00|1|0100|x:S|xxxx:Rn|xxxx:Rd|xxxx xxxx xxxx:imm12
    unmatch_condition: >
                        (cond == 0b1111) 
                        or (Rn == 0b1101) 
                        or ( (Rn == 0b1111) and (S == 0) ) 
                        or ( (Rd == 0b1111) and (S == 1) ) 
    extras:
      clocks: 10
      pseudo_code: arm_add_imm

  - name: arm_add_reg_a1
    format: xxxx:cond|00|0|0100|x:S|xxxx:Rn|xxxx:Rd|xxxx x:imm5|xx:type|0|xxxx:Rm
    unmatch_condition: >
                        (cond == 0b1111) 
                        or ( (Rd == 0b1111) and (S == 1) ) 
                        or (Rn == 0b1101)
    extras:
      clocks: 10
      pseudo_code: arm_add_reg

  - name: arm_add_spimm_a1
    format: xxxx:cond|00|1|0100|x:S|1101|xxxx:Rd|xxxx xxxx xxxx:imm12
    unmatch_condition: >
                        (cond == 0b1111) 
                        or ( (Rd == 0b1111) and (S == 1) )
    extras:
      clocks: 10
      pseudo_code: arm_add_spimm

  - name: arm_adr_a1
    format: xxxx:cond|00|1|0100|0|1111|xxxx:Rd|xxxx xxxx xxxx:imm12
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_adr_imm
  - name: arm_subs_pclr_a1
    format: xxxx:cond|00|1|xxxx:opcode|1|xxxx:Rn|1111|xxxx xxxx xxxx:imm12
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_subs_pclr

  - name: arm_cmp_imm_a1
    format: xxxx:cond|00|1|10101|xxxx:Rn|0000|xxxx xxxx xxxx:imm12
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_cmp_imm

  - name: arm_cmn_imm_a1
    format: xxxx:cond|00|1|1011|1|xxxx:Rn|0000|xxxx xxxx xxxx:imm12
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_cmp_imm

  - name: arm_sub_imm_a1
    format: xxxx:cond|00|1|0010|x:S|xxxx:Rn|xxxx:Rd|xxxx xxxx xxxx:imm12
    unmatch_condition: >
                        (cond == 0b1111) 
                        or ( (Rn == 0b1111) and (S == 0) ) 
                        or ( (Rd == 0b1111) and (S == 1) ) 
                        or (Rn == 0b1101)
    extras:
      clocks: 10
      pseudo_code: arm_sub_imm

  - name: arm_sub_reg_a1
    format: xxxx:cond|00|0|0010|x:S|xxxx:Rn|xxxx:Rd|xxxx x:imm5|xx:type|0|xxxx:Rm
    unmatch_condition: >
                        (cond == 0b1111) 
                        or ( (Rd == 0b1111) and (S == 1) ) 
                        or (Rn == 0b1101)
    extras:
      clocks: 10
      pseudo_code: arm_sub_reg


  - name: arm_sub_spimm_a1
    format: xxxx:cond|00|1|0010|x:S|1101|xxxx:Rd|xxxx xxxx xxxx:imm12
    unmatch_condition: >
                        (cond == 0b1111) 
                        or ( (Rd == 0b1111) and (S == 1) )
    extras:
      clocks: 10
      pseudo_code: arm_sub_imm


  - name: arm_cmp_reg_a1
    format: xxxx:cond|00|0|1010|1|xxxx:Rn|0000|xxxx x:imm5|xx:type|0|xxxx:Rm
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_cmp_reg

  - name: arm_mov_imm_a1
    format: xxxx:cond|00|1|1101|x:S|0000|xxxx:Rd|xxxxxxxxxxxx:imm12
    unmatch_condition: >
                        (cond == 0b1111) 
                        or ( (Rd == 0b1111) and (S == 1) )
    extras:
      clocks: 10
      pseudo_code: arm_mov_imm

  - name: arm_mov_imm_a2
    format: xxxx:cond|0011|0000|xxxx:imm4|xxxx:Rd|xxxxxxxxxxxx:imm12
    unmatch_condition: (cond == 0b1111) 
    extras:
      clocks: 10
      pseudo_code: arm_mov_imm

  - name: arm_mvn_imm_a1
    format: xxxx:cond|00|1|1111|x:S|0000|xxxx:Rd|xxxxxxxxxxxx:imm12
    unmatch_condition: (cond == 0b1111) or ( (Rd == 0b1111) and (S == 1) )
    extras:
      clocks: 10
      pseudo_code: arm_mvn_imm


  - name: arm_mov_reg_a1
    format: xxxx:cond|00|0|1101|x:S|0000|xxxx:Rd|00000000|xxxx:Rm
    unmatch_condition: >
                        (cond == 0b1111) 
                        or ( (Rd == 0b1111) and (S == 1) )
    extras:
      clocks: 10
      pseudo_code: arm_mov_reg

  - name: arm_mvn_reg_a1
    format: xxxx:cond|00|0|1111|x:S|0000|xxxx:Rd|xxxx x:imm5|xx:type|0|xxxx:Rm
    unmatch_condition: >
                        (cond == 0b1111) 
                        or ( (Rd == 0b1111) and (S == 1) )
    extras:
      clocks: 10
      pseudo_code: arm_mvn_reg


  - name: arm_bl_a1
    format: xxxx:cond|1011|xxxxxxxxxxxxxxxxxxxxxxxx:imm24
    unmatch_condition: (cond == 0b1111) 
    extras:
      clocks: 10
      pseudo_code: arm_bl_imm

  - name: arm_blx_a2
    format: 1111|101|x:H|xxxxxxxxxxxxxxxxxxxxxxxx:imm24
    extras:
      clocks: 10
      pseudo_code: arm_bl_imm

  - name: arm_blx_reg_a1
    format: xxxx:cond|00010010|1111|1111|1111|0011|xxxx:Rm
    unmatch_condition: (cond == 0b1111) or (Rm == 15)
    extras:
      clocks: 10
      pseudo_code: arm_bl_reg

  - name: arm_b_a1
    format: xxxx:cond|1010|xxxxxxxxxxxxxxxxxxxxxxxx:imm24
    unmatch_condition: (cond == 0b1111) 
    extras:
      clocks: 10
      pseudo_code: arm_b_imm

  - name: arm_bx_a1
    format: xxxx:cond|00010010|1111|1111|1111|0001|xxxx:Rm
    unmatch_condition: (cond == 0b1111) 
    extras:
      clocks: 10
      pseudo_code: arm_bx_reg

  - name: arm_str_imm_a1
    format: xxxx:cond|010|x:P|x:U|0|x:W|0|xxxx:Rn|xxxx:Rt|xxxx xxxx xxxx:imm12
    unmatch_condition: >
                        (cond == 0b1111) 
                        or ( (P == 0) and (W == 1) ) 
                        or ( (Rn == 0b1101) 
                              and (P == 1) and (U == 0) and (W == 1) 
                              and (imm12 == 0b000000000100) )
    extras:
      clocks: 10
      pseudo_code: arm_str_imm

  - name: arm_strb_imm_a1
    format: xxxx:cond|010|x:P|x:U|1|x:W|0|xxxx:Rn|xxxx:Rt|xxxx xxxx xxxx:imm12
    unmatch_condition: >
                        (cond == 0b1111) 
                        or ( (P == 0) and (W == 1) )
    extras:
      clocks: 10
      pseudo_code: arm_str_imm

  - name: arm_strh_imm_a1
    format: xxxx:cond|000|x:P|x:U|1|x:W|0|xxxx:Rn|xxxx:Rt|xxxx:imm8[7:4]|1011|xxxx:imm8[3:0]
    unmatch_condition: >
                        (cond == 0b1111) 
                        or ( (P == 0) and (W == 1) )
    extras:
      clocks: 10
      pseudo_code: arm_str_imm


  - name: arm_strd_imm_a1
    format: xxxx:cond|000|x:P|x:U|1|x:W|0|xxxx:Rn|xxxx:Rt|xxxx:imm8[7:4]|1111|xxxx:imm8[3:0]
    unmatch_condition: >
                        (cond == 0b1111) 
                        or ( (P == 0) and (W == 1) )
    extras:
      clocks: 10
      pseudo_code: arm_strd_imm


  - name: arm_str_reg_a1
    format: xxxx:cond|011|x:P|x:U|0|x:W|0|xxxx:Rn|xxxx:Rt|xxxx x:imm5|xx:type|0|xxxx:Rm
    unmatch_condition: >
                        (cond == 0b1111) 
                        or ( Rm == 15 )
                        or ( (P == 0) and (W == 1) )
    extras:
      clocks: 10
      pseudo_code: arm_str_reg


  - name: arm_strb_reg_a1
    format: xxxx:cond|011|x:P|x:U|1|x:W|0|xxxx:Rn|xxxx:Rt|xxxx x:imm5|xx:type|0|xxxx:Rm
    unmatch_condition: >
                        (cond == 0b1111) 
                        or ( (P == 0) and (W == 1) )
    extras:
      clocks: 10
      pseudo_code: arm_str_reg


  - name: arm_push_a1
    format: xxxx:cond|1001 00|1|0|1101|xxxx xxxx xxxx xxxx:register_list
    unmatch_condition: (cond == 0b1111) or (setbit_count(register_list) < 2)
    extras:
      clocks: 10
      pseudo_code: arm_push

  - name: arm_push_a2
    format: xxxx:cond|010|1|0|0|1|0|1101|xxxx:Rt|0000 0000 0100
    unmatch_condition: >
                        (cond == 0b1111) 
                        or (Rt == 13)
    extras:
      clocks: 10
      pseudo_code: arm_push


  - name: arm_stmfd_a1
    format: xxxx:cond|1001 00|x:W|0|xxxx:Rn|xxxx xxxx xxxx xxxx:register_list
    unmatch_condition: >
                         (cond == 0b1111) 
                         or ( (W == 1) and (Rn == 0b1101) and (setbit_count(register_list) > 1) )
                         or (Rn == 15)
                         or (setbit_count(register_list) < 1)
    extras:
      clocks: 10
      pseudo_code: arm_stmfd


  - name: arm_stm_a1
    format: xxxx:cond|1000 10|x:W|0|xxxx:Rn|xxxx xxxx xxxx xxxx:register_list
    unmatch_condition: (cond == 0b1111) 
                        or (Rn == 15)
    extras:
      clocks: 10
      pseudo_code: arm_stm

  - name: arm_ldr_imm_a1
    format: xxxx:cond|010|x:P|x:U|0|x:W|1|xxxx:Rn|xxxx:Rt|xxxxxxxxxxxx:imm12
    unmatch_condition: >
                        (cond == 0b1111) 
                        or (Rn == 0b1111) 
                        or ( (P == 0) and (W == 1) ) 
                        or ( (Rn == 0b1101) 
                              and (P == 0) and (U == 1) and (W == 0) 
                              and (imm12 == 0b000000000100) )
    extras:
      clocks: 10
      pseudo_code: arm_ldr_imm

  - name: arm_ldr_literal_a1
    format: xxxx:cond|010|x:P|x:U|0|x:W|1|1111|xxxx:Rt|xxxxxxxxxxxx:imm12
    unmatch_condition: >
                        (cond == 0b1111) 
                        or ( (P == 0) and (W == 1) ) 
    extras:
      clocks: 10
      pseudo_code: arm_ldr_literal

  - name: arm_ldrb_imm_a1
    format: xxxx:cond|010|x:P|x:U|1|x:W|1|xxxx:Rn|xxxx:Rt|xxxxxxxxxxxx:imm12
    unmatch_condition: >
                        (cond == 0b1111) 
                        or (Rn == 0b1111) 
                        or ( (P == 0) and (W == 1) ) 
                        or (Rt == 15) 
                        or ( ((P == 0) or (W == 1)) )
    extras:
      clocks: 10
      pseudo_code: arm_ldr_imm

  - name: arm_ldrh_imm_a1
    format: xxxx:cond|000|x:P|x:U|1|x:W|1|xxxx:Rn|xxxx:Rt|xxxx:imm8[7:4]|1011|xxxx:imm8[3:0]
    unmatch_condition: >
                        (cond == 0b1111) 
                        or (Rn == 0b1111) 
                        or ( (P == 0) and (W == 1) ) 
                        or (Rt == 15) 
                        or ( ((P == 0) or (W == 1)) )
    extras:
      clocks: 10
      pseudo_code: arm_ldr_imm

  - name: arm_ldrd_imm_a1
    format: xxxx:cond|000|x:P|x:U|1|x:W|0|xxxx:Rn|xxxx:Rt|xxxx:imm8[7:4]|1101|xxxx:imm8[3:0]
    unmatch_condition: >
                        (cond == 0b1111) 
                        or (Rn == 0b1111) 
                        or ( (P == 0) and (W == 1) ) 
    extras:
      clocks: 10
      pseudo_code: arm_ldrd_imm


  - name: arm_ldr_reg_a1
    format: xxxx:cond|011|x:P|x:U|0|x:W|1|xxxx:Rn|xxxx:Rt|xxxx x:imm5|xx:type|0|xxxx:Rm
    unmatch_condition: >
                        (cond == 0b1111) 
                        or ( (P == 0) and (W == 1) ) 
                        or (Rm == 15) 
                        or ( ((P == 0) or (W == 1)) and (Rn == 15) )
    extras:
      clocks: 10
      pseudo_code: arm_ldr_reg

  - name: arm_ldrb_reg_a1
    format: xxxx:cond|011|x:P|x:U|1|x:W|1|xxxx:Rn|xxxx:Rt|xxxx x:imm5|xx:type|0|xxxx:Rm
    unmatch_condition: >
                        (cond == 0b1111) 
                        or (Rn == 0b1111) 
                        or (Rt == 0b1111) 
                        or ( (P == 0) and (W == 1) ) 
                        or (Rt == 15) 
                        or ( ((P == 0) or (W == 1)) and (Rn == 15) )
    extras:
      clocks: 10
      pseudo_code: arm_ldr_reg

  - name: arm_ldrh_reg_a1
    format: xxxx:cond|000|x:P|x:U|0|x:W|1|xxxx:Rn|xxxx:Rt|0000|1011|xxxx:Rm
    unmatch_condition: >
                        (cond == 0b1111) 
                        or ( (P == 0) and (W == 1) ) 
                        or (Rm == 0b1111) 
                        or (Rt == 0b1111) 
                        or ( ((P == 0) or (W == 1)) and (Rn == 15) )
    extras:
      clocks: 10
      pseudo_code: arm_ldr_reg


  - name: arm_pop_a1
    format: xxxx:cond|1000 10|1|1|1101|xxxx xxxx xxxx xxxx:register_list
    unmatch_condition: (cond == 0b1111) or (setbit_count(register_list) < 2)
    extras:
      clocks: 10
      pseudo_code: arm_pop

  - name: arm_pop_a2
    format: xxxx:cond|010|0|1|0|0|1|1101|xxxx:Rt|0000 0000 0100
    unmatch_condition: >
                        (cond == 0b1111) 
                        or (Rt == 13)
    extras:
      clocks: 10
      pseudo_code: arm_pop

  - name: arm_ldm_a1
    format: xxxx:cond|1000 10|x:W|1|xxxx:Rn|xxxx xxxx xxxx xxxx:register_list
    unmatch_condition: >
                         (cond == 0b1111)
                         or ( (W == 1) and (Rn == 0b1101) and (setbit_count(register_list) > 1) )
                         or (Rn == 15)
                         or (setbit_count(register_list) < 1)
    extras:
      clocks: 10
      pseudo_code: arm_ldm


  - name: arm_nop_a1
    format: xxxx:cond|0011|0010|0000|1111|0000|0000 0000
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_nop

  - name: arm_msr_imm_a1
    format: xxxx:cond|00110|0|10|xx:mask|00|1111|xxxx xxxx xxxx:imm12
    unmatch_condition: (cond == 0b1111) or (mask == 0b00)
    extras:
      clocks: 10
      pseudo_code: arm_msr_imm

  - name: arm_msr2_imm_a1
    format: xxxx:cond|00110|x:R|10|xxxx:mask|1111|xxxx xxxx xxxx:imm12
    unmatch_condition: >
                        (cond == 0b1111) 
                        or ( (mask == 0b00) and (R == 0) )
    extras:
      clocks: 10
      pseudo_code: arm_msr2_imm

  - name: arm_mrs_a1
    format: xxxx:cond|00010|0|00|1111|xxxx:Rd|00|0|0|0000|0000
    unmatch_condition: (cond == 0b1111) or (Rd == 15)
    extras:
      clocks: 10
      pseudo_code: arm_mrs

  - name: arm_msr2_reg_a1
    format: xxxx:cond|00010|x:R|10|xxxx:mask|1111|00|0|0|0000|xxxx:Rn
    unmatch_condition: (cond == 0b1111) or (mask == 0b0000) or (Rn == 15)
    extras:
      clocks: 10
      pseudo_code: arm_msr2_reg


  - name: arm_mcr_a1
    format: xxxx:cond|1110|xxx:opc1|0|xxxx:CRn|xxxx:Rt|xxxx:coproc|xxx:opc2|1|xxxx:CRm
    unmatch_condition: (cond == 0b1111) or (coproc == 0b1010) or (coproc == 0b1011) or (Rt == 15)
    extras:
      clocks: 10
      pseudo_code: arm_mcr
 
  - name: arm_mcr2_a2
    format: 1111|1110|xxx:opc1|0|xxxx:CRn|xxxx:Rt|xxxx:coproc|xxx:opc2|1|xxxx:CRm
    unmatch_condition: (coproc == 0b1010) or (coproc == 0b1011) or (Rt == 15)
    extras:
      clocks: 10
      pseudo_code: arm_mcr
 
  - name: arm_mrc_a1
    format: xxxx:cond|1110|xxx:opc1|1|xxxx:CRn|xxxx:Rt|xxxx:coproc|xxx:opc2|1|xxxx:CRm
    unmatch_condition: (cond == 0b1111) or (coproc == 0b1010) or (coproc == 0b1011) or (Rt == 15)
    extras:
      clocks: 10
      pseudo_code: arm_mrc
 
  - name: arm_mrc2_a2
    format: 1111|1110|xxx:opc1|1|xxxx:CRn|xxxx:Rt|xxxx:coproc|xxx:opc2|1|xxxx:CRm
    unmatch_condition: (coproc == 0b1010) or (coproc == 0b1011) or (Rt == 15)
    extras:
      clocks: 10
      pseudo_code: arm_mrc
 
  - name: arm_bic_imm_a1
    format: xxxx:cond|00|1|1110|x:S|xxxx:Rn|xxxx:Rd|xxxx xxxx xxxx:imm12
    unmatch_condition: (cond == 0b1111) or ( (Rd == 0b1111) or (S == 1) )
    extras:
      clocks: 10
      pseudo_code: arm_bic_imm
 
  - name: arm_orr_imm_a1
    format: xxxx:cond|00|1|1100|x:S|xxxx:Rn|xxxx:Rd|xxxx xxxx xxxx:imm12
    unmatch_condition: (cond == 0b1111) or ( (Rd == 0b1111) or (S == 1) )
    extras:
      clocks: 10
      pseudo_code: arm_orr_imm

  - name: arm_orr_reg_a1
    format: xxxx:cond|00|0|1100|x:S|xxxx:Rn|xxxx:Rd|xxxx x:imm5|xx:type|0|xxxx:Rm
    unmatch_condition: (cond == 0b1111) or ( (Rd == 0b1111) or (S == 1) )
    extras:
      clocks: 10
      pseudo_code: arm_orr_reg

  - name: arm_movt_a1
    format: xxxx:cond|0011|0100|xxxx:imm16[15:12]|xxxx:Rd|xxxx xxxx xxxx:imm16[11:0]
    unmatch_condition: (cond == 0b1111) or (Rd == 0b1111) 
    extras:
      clocks: 10
      pseudo_code: arm_movt
 
  - name: arm_lsl_imm_a1
    format: xxxx:cond|00|0|1101|x:S|0000|xxxx:Rd|xxxx x:imm5|000|xxxx:Rm
    unmatch_condition: (cond == 0b1111) or (imm5 == 0b00000) 
    extras:
      clocks: 10
      pseudo_code: arm_lsl_imm

  - name: arm_lsl_reg_a1
    format: xxxx:cond|00|0|1101|x:S|0000|xxxx:Rd|xxxx:Rm|0001|xxxx:Rn
    unmatch_condition: (cond == 0b1111) or (Rd == 15) or (Rm == 15) or (Rn == 15)
    extras:
      clocks: 10
      pseudo_code: arm_lsl_reg

  - name: arm_lsr_imm_a1
    format: xxxx:cond|00|0|1101|x:S|0000|xxxx:Rd|xxxx x:imm5|010|xxxx:Rm
    unmatch_condition: (cond == 0b1111) or ( (Rd == 0b1111) and (S == 1) )
    extras:
      clocks: 10
      pseudo_code: arm_lsr_imm

 
  - name: arm_bfc_a1
    format: xxxx:cond|0111110|xxxx x:msb|xxxx:Rd|xxxx x:lsb|001|1111
    unmatch_condition: (cond == 0b1111) or (Rd == 15) 
    extras:
      clocks: 10
      pseudo_code: arm_bfc
 
  - name: arm_and_imm_a1
    format: xxxx:cond|00|1|0000|x:S|xxxx:Rn|xxxx:Rd|xxxx xxxx xxxx:imm12
    unmatch_condition: (cond == 0b1111) or ( (Rd == 0b1111) and (S == 1) ) 
    extras:
      clocks: 10
      pseudo_code: arm_and_imm

  - name: arm_and_reg_a1
    format: xxxx:cond|00|0|0000|x:S|xxxx:Rn|xxxx:Rd|xxxx x:imm5|xx:type|0|xxxx:Rm
    unmatch_condition: (cond == 0b1111) or ( (Rd == 0b1111) and (S == 1) ) 
    extras:
      clocks: 10
      pseudo_code: arm_and_reg
 
  - name: arm_uxtb_a1
    format: xxxx:cond|01101110|1111|xxxx:Rd|xx:rotate|00|0111|xxxx:Rm
    unmatch_condition: (cond == 0b1111) or (Rd == 15) or (Rm == 15) 
    extras:
      clocks: 10
      pseudo_code: arm_uxt
      
  - name: arm_uxth_a1
    format: xxxx:cond|01101111|1111|xxxx:Rd|xx:rotate|00|0111|xxxx:Rm
    unmatch_condition: (cond == 0b1111) or (Rd == 15) or (Rm == 15) 
    extras:
      clocks: 10
      pseudo_code: arm_uxt

  - name: arm_rsb_reg_a1
    format: xxxx:cond|00|0|0011|x:S|xxxx:Rn|xxxx:Rd|xxxx x:imm5|xx:type|0|xxxx:Rm
    unmatch_condition: (cond == 0b1111) or ( (Rd == 15) and (S == 1) )
    extras:
      clocks: 10
      pseudo_code: arm_rsb_reg

  - name: arm_rsb_imm_a1
    format: xxxx:cond|00|1|0011|x:S|xxxx:Rn|xxxx:Rd|xxxx xxxx xxxx:imm12
    unmatch_condition: (cond == 0b1111) or ( (Rd == 0b1111) and (S == 1) )
    extras:
      clocks: 10
      pseudo_code: arm_rsb_imm

  - name: arm_sbc_reg_a1
    format: xxxx:cond|00|0|0110|x:S|xxxx:Rn|xxxx:Rd|xxxx x:imm5|xx:type|0|xxxx:Rm
    unmatch_condition: (cond == 0b1111) or ( (Rd == 15) and (S == 1) )
    extras:
      clocks: 10
      pseudo_code: arm_sbc_reg


  - name: arm_mul_a1
    format: xxxx:cond|0000000|x:S|xxxx:Rd|0000|xxxx:Rm|1001|xxxx:Rn
    unmatch_condition: (cond == 0b1111) or (Rd == 15) or (Rm == 15) or (Rn == 15)
    extras:
      clocks: 10
      pseudo_code: arm_mul

  - name: arm_tst_imm_a1
    format: xxxx:cond|00|1|1000|1|xxxx:Rn|0000|xxxx xxxx xxxx:imm12
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_tst_imm

  - name: arm_tst_reg_a1
    format: xxxx:cond|00|0|1000|1|xxxx:Rn|0000|xxxx x:imm5|xx:type|0|xxxx:Rm
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_tst_reg

  - name: arm_sxtb_a1
    format: xxxx:cond|0110 1010|1111|xxxx:Rd|xx:rotate|00|0111|xxxx:Rm
    unmatch_condition: (cond == 0b1111) or (Rd == 15) or (Rm == 15)
    extras:
      clocks: 10
      pseudo_code: arm_sxtb

  - name: arm_asr_imm_a1
    format: xxxx:cond|00|0|1101|x:S|0000|xxxx:Rd|xxxx x:imm5|100|xxxx:Rm
    unmatch_condition: (cond == 0b1111) or ( (Rd == 15) and (S == 1) )
    extras:
      clocks: 10
      pseudo_code: arm_asr_imm

  - name: arm_srs_a1
    format: 1111|100|x:P|x:U|1|x:W|0|1101|0000|0101|000|xxxx x:mode
    extras:
      clocks: 10
      pseudo_code: arm_srs

  - name: arm_rfe_a1
    format: 1111|100|x:P|x:U|0|x:W|1|xxxx:Rn|0000|1010|0000 0000
    unmatch_condition: (Rn == 15)
    extras:
      clocks: 10
      pseudo_code: arm_rfe

  - name: arm_wfi_a1
    format: xxxx:cond|0011 0010|0000|1111|0000|0000 0011
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_wfi
      

  - name: arm_vadd_freg_a2
    format: xxxx:cond|1110 0|x:D|11|xxxx:Vn|xxxx:Vd|101|x:sz|x:N|0|x:M|0|xxxx:Vm
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_vadd_freg

  - name: arm_vldr_a1
    format: xxxx:cond|1101|x:U|x:D|0|1|xxxx:Rn|xxxx:Vd|1011|xxxx xxxx:imm8
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_vldr

  - name: arm_vldr_a2
    format: xxxx:cond|1101|x:U|x:D|0|1|xxxx:Rn|xxxx:Vd|1010|xxxx xxxx:imm8
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_vldr


  - name: arm_vcvt_df_a1
    format: xxxx:cond|1110|1|x:D|11|0111|xxxx:Vd|101|x:sz|1|1|x:M|0|xxxx:Vm
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_vcvt_df


  - name: arm_vcvt_fi_a1
    format: xxxx:cond|11101|x:D|11|1|xxx:opc2|xxxx:Vd|101|x:sz|x:op|1|x:M|0|xxxx:Vm
    unmatch_condition: > 
                         (cond == 0b1111)
                         or ( (opc2 != 0b000) and ( (opc2 != 0b101) and (opc2 != 0b100) ) )
    extras:
      clocks: 10
      pseudo_code: arm_vcvt_fi


  - name: arm_vstr_a1
    format: xxxx:cond|1101|x:U|x:D|0|0|xxxx:Rn|xxxx:Vd|1011|xxxx xxxx:imm8
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_vstr

  - name: arm_vstr_a2
    format: xxxx:cond|1101|x:U|x:D|0|0|xxxx:Rn|xxxx:Vd|1010|xxxx xxxx:imm8
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_vstr

  - name: arm_vcmp_a1
    format: xxxx:cond|11101|x:D|11|0100|xxxx:Vd|101|x:sz|x:E|1|x:M|0|xxxx:Vm
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_vcmp

  - name: arm_vcmp_a2
    format: xxxx:cond|11101|x:D|11|0101|xxxx:Vd|101|x:sz|x:E|1|0|0|0000
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_vcmp


  - name: arm_vmrs_a1
    format: xxxx:cond|11101111|0001|xxxx:Rt|1010|000|1|0000
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_vmrs

  - name: arm_vmov_imm_a1
    format: 1111|001|x:i|1|x:D|000|xxx:imm7[6:4]|xxxx:Vd|xxxx:cmode|0|x:Q|x:op|1|xxxx:imm7[3:0]
    unmatch_condition: >
                         ( (op == 0) and (cmode[0] == 1) and ( (cmode[3] != 1) and (cmode[2] != 1) ) )
                         or ( (op == 1) and (cmode != 0b1110) )
                         or ( (Q == 1) and (Vd[0] == 1) )
    extras:
      clocks: 10
      pseudo_code: arm_vmov_imm


  - name: arm_vmov_imm_a2
    format: xxxx:cond|11101|x:D|11|xxxx:imm8[7:4]|xxxx:Vd|101|x:sz|0|0|0|0|xxxx:imm8[3:0]
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_vmov_imm

  - name: arm_vmov_sreg_a1
    format: xxxx:cond|1110|000|x:op|xxxx:Vn|xxxx:Rt|1010|x:N|00|1|0000
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_vmov_sreg


  - name: arm_vsub_freg_a2
    format: xxxx:cond|11100|x:D|11|xxxx:Vn|xxxx:Vd|101|x:sz|x:N|1|x:M|0|xxxx:Vm
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_vsub_freg


  - name: arm_vmul_freg_a2
    format: xxxx:cond|11100|x:D|10|xxxx:Vn|xxxx:Vd|101|x:sz|x:N|0|x:M|0|xxxx:Vm
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_vmul_freg

  - name: arm_vdiv_freg_a2
    format: xxxx:cond|11101|x:D|00|xxxx:Vn|xxxx:Vd|101|x:sz|x:N|0|x:M|0|xxxx:Vm
    unmatch_condition: (cond == 0b1111)
    extras:
      clocks: 10
      pseudo_code: arm_vdiv_freg

      